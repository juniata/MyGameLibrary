#include	"DX_LIBRARY\DX_Library.h"
#include	"Bullet.h"

//-----------------------------------------------------------------------------------------
//
//  初期化
//
//-----------------------------------------------------------------------------------------
Bullet::Bullet()
{
	obj = new DX_2DObject("kinu.png");

	size = DirectX::XMFLOAT2(32.0f, 32.0f);
	float basePosX = (DX_System::GetWindowWidth() - size.x) * 0.5f;
	float basePosY = (DX_System::GetWindowHeight() - size.y) * 0.5f;
	basePos = DirectX::XMFLOAT2(basePosX, basePosY);
	pos = basePos;
	distance = 0.0f;
	angle = 0.0f;
	isEnabled = true;
}

//-----------------------------------------------------------------------------------------
//
//  解放
//
//-----------------------------------------------------------------------------------------
Bullet::~Bullet()
{
	DELETE_OBJ(obj);
}

//-----------------------------------------------------------------------------------------
//
//  移動
//
//-----------------------------------------------------------------------------------------
void Bullet::Move()
{
	//distance += 5.0f;
	//if (radius >= 360.0f)radius = 360.0f;
	//angle += 1.0f;
	float x = basePos.x + distance*cosf(angle*atanf(1.0f)*(4.0f / 180.0f));
	float y = basePos.y + distance*sinf(angle*atanf(1.0f)*(4.0f / 180.0f));
	pos = DirectX::XMFLOAT2(x, y);
}

//-----------------------------------------------------------------------------------------
//
//  更新
//
//-----------------------------------------------------------------------------------------
void Bullet::Update()
{
	if (!isEnabled)
	{
		return;
	}
	DeathRecord();
	Move();
}

//-----------------------------------------------------------------------------------------
//
//  描画
//
//-----------------------------------------------------------------------------------------
void Bullet::Render()
{
	if (!isEnabled)
	{
		return;
	}

	obj->Render(pos, size);
}

//-----------------------------------------------------------------------------------------
//
//  有効フラグセット
//
//-----------------------------------------------------------------------------------------
void Bullet::SetEnabled(bool isEnabled)
{
	this->isEnabled = isEnabled;
}

//-----------------------------------------------------------------------------------------
//
//  死亡フラグ取得
//
//-----------------------------------------------------------------------------------------
bool Bullet::IsDead()
{
	return isDead;
}

//-----------------------------------------------------------------------------------------
//
//  リスポーン
//
//-----------------------------------------------------------------------------------------
void Bullet::Response()
{
	pos = basePos;
	distance = 0.0f;
	angle = 0.0f;
	isEnabled = false;
}

//-----------------------------------------------------------------------------------------
//
//  死亡記録
//
//-----------------------------------------------------------------------------------------
void Bullet::DeathRecord()
{
	if (pos.x <= 0.0f
		|| pos.x >= DX_System::GetWindowWidth()
		|| pos.y <= 0.0f
		|| pos.y >= DX_System::GetWindowHeight())
	{
		isDead = true;
		Response();
	}
}

//-----------------------------------------------------------------------------------------
//
//  復活させる
//
//-----------------------------------------------------------------------------------------
void Bullet::Resurrection()
{
	isDead = false;
}

//-----------------------------------------------------------------------------------------
//
//  角度をセットする
//
//-----------------------------------------------------------------------------------------
void Bullet::SetAngle(float angle)
{
	this->angle = angle;
}

//-----------------------------------------------------------------------------------------
//
//  中心点からの距離をセットする
//
//-----------------------------------------------------------------------------------------
void Bullet::SetDistance(float distance)
{
	this->distance = distance;
}

//-----------------------------------------------------------------------------------------
//
//  角度取得
//
//-----------------------------------------------------------------------------------------
float Bullet::GetAngle()
{
	return this->angle;
}

//-----------------------------------------------------------------------------------------
//
//  距離取得
//
//-----------------------------------------------------------------------------------------
float Bullet::GetDistance()
{
	return this->distance;
}