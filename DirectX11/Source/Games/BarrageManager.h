#ifndef __BARRAGE_MANAGER_H_
#define __BARRAGE_MANAGER_H_

//****************************************************************************************************
//
//	弾幕クラスを管理　敵プレイヤー関係なく使用できます。
//
//****************************************************************************************************
class BarrageManager
{
public:
	//------------------------------------------------------------------------------
	//
	//  @brief	引数付きコンストラクタ
	//	@param[in]	barrageNum 生成する弾幕クラスの数
	//
	//------------------------------------------------------------------------------
	BarrageManager(const size_t barrageNum);

	//------------------------------------------------------------------------------
	//
	//  @brief		デストラクタ
	//
	//------------------------------------------------------------------------------
	~BarrageManager();

	//------------------------------------------------------------------------------
	//
	//  @brief		弾幕クラスを追加する
	//	@param[in]	pCreateBarrage	追加する弾幕クラス
	//
	//------------------------------------------------------------------------------
	void AddBarrage(BaseBarrage* pCreateBarrage);

	//------------------------------------------------------------------------------
	//
	//  @brief		更新
	//
	//------------------------------------------------------------------------------
	void Update();

	//------------------------------------------------------------------------------
	//
	//  @brief		描画
	//
	//------------------------------------------------------------------------------
	void Render();

	//------------------------------------------------------------------------------
	//
	//  @brief		指定した弾幕クラスのインスタンスを取得する
	//	@param[in]	index	取得したい弾幕クラスの番号
	//	@return		弾幕クラスのインスタンス
	//
	//------------------------------------------------------------------------------
	BaseBarrage* GetBarrage(const size_t index);
private:
	//------------------------------------------------------------------------------
	//
	//  @brief		デフォルトコンストラクタ
	//
	//------------------------------------------------------------------------------
	BarrageManager() {};

	// 扱う弾幕リストの数
	size_t m_barrageNum;

	// 弾幕一覧
	BaseBarrage** m_pBarrageList;
};

#endif // !__BARRAGE_MANAGER_H_
