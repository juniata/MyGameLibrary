#ifndef __DX_2DOBJECT_H_
#define __DX_2DOBJECT_H_

//--------------------------------------------------
//	2D用頂点情報
//--------------------------------------------------
struct tagVertex2D{
	DirectX::XMFLOAT3 pos;
	DirectX::XMFLOAT2 uv;
};

//****************************************************************************************************
//
//	Object2D
//
//****************************************************************************************************
class DX_2DObject : public DX_GameObject
{
public:
	//------------------------------------------------------------------------------
	//
	//  @brief		メンバー変数の初期化
	//
	//------------------------------------------------------------------------------
	DX_2DObject();

	//------------------------------------------------------------------------------
	//
	//  @brief		メンバー変数を初期化し、2DObjectを作成する
	//	@param[in]	pFilepath	テクスチャのファイルパス
	//
	//------------------------------------------------------------------------------
	DX_2DObject(
		const char* pFilepath
		);

	//------------------------------------------------------------------------------
	//
	//  @brief		m_pShaderResourceViewを解放
	//
	//------------------------------------------------------------------------------
	~DX_2DObject();

	//------------------------------------------------------------------------------
	//
	//  @brief		テクスチャの高さを取得する
	//
	//------------------------------------------------------------------------------
	unsigned int GetHeight()const;

	//------------------------------------------------------------------------------
	//
	//  @brief		テクスチャの幅を取得する
	//
	//------------------------------------------------------------------------------
	unsigned int GetWidth()const;

	//------------------------------------------------------------------------------
	//
	//  @brief		全画面に描画
	//
	//------------------------------------------------------------------------------
	void Render();

	//------------------------------------------------------------------------------
	//
	//  @brief		指定した範囲に描画
	//	@param[in]	renderPos	描画する範囲
	//
	//------------------------------------------------------------------------------
	void Render(const tagRect& renderPos);
	
	//------------------------------------------------------------------------------
	//
	//  @brief		指定した範囲、指定した画像座標で描画
	//	@param[in]	renderPos	描画する範囲
	//	@param[in]	texturePos	描画する画像の範囲
	//
	//------------------------------------------------------------------------------
	void Render(const tagRect& renderPos,const tagRect& texturePos);

	//------------------------------------------------------------------------------
	//
	//  @brief		指定した範囲、指定した画像座標で描画
	//	@param[in]	renderPos	描画する範囲
	//	@param[in]	renderSize	描画する画像の範囲
	//
	//------------------------------------------------------------------------------
	void Render(DirectX::XMFLOAT2 renderPos, DirectX::XMFLOAT2 renderSize);

	//------------------------------------------------------------------------------
	//
	//  @brief		テクスチャを読み込む
	//	@param[in]	pFilepath	テクスチャのファイルパス
	//
	//------------------------------------------------------------------------------
	void LoadTexture(
		const char* pFilepath
		);

private:
	//	テクスチャ情報
	ID3D11ShaderResourceView*		m_pShaderResourceView;
	//	テクスチャサイズ
	unsigned int m_height;
	unsigned int m_width;

	//------------------------------------------------------------------------------
	//
	//  @brief		頂点情報を作成する
	//	@param[in]	pVertex		tagVertex2D[4]
	//	@param[in]	renderPos	画面に描画する範囲	
	//	@param[in]	texturePos	描画する画像の範囲
	//
	//------------------------------------------------------------------------------
	void CreateVertex(
		tagVertex2D*	pVertex,
		const tagRect&	renderPos,
		const tagRect&	texturePos
		);

};

class DX_Instance2DObject
{
public:
	//------------------------------------------------------------------------------
	//
	//  @brief		メンバー変数の初期化
	//
	//------------------------------------------------------------------------------
	DX_Instance2DObject();

	//------------------------------------------------------------------------------
	//
	//  @brief		メンバー変数を初期化し、2DObjectを作成する
	//	@param[in]	pFilepath	テクスチャのファイルパス
	//
	//------------------------------------------------------------------------------
	DX_Instance2DObject(const char* pFilepath, const size_t num);

	//------------------------------------------------------------------------------
	//
	//  @brief		m_pShaderResourceViewを解放
	//
	//------------------------------------------------------------------------------
	~DX_Instance2DObject();

	DirectX::XMFLOAT3* GetPosList();
	DirectX::XMFLOAT3* GetPosList(const unsigned int index);

	//------------------------------------------------------------------------------
	//
	//  @brief		テクスチャを読み込む
	//	@param[in]	pFilepath	テクスチャのファイルパス
	//
	//------------------------------------------------------------------------------
	void LoadTexture(
		const char* pFilepath
	);

	void Render();
private:
	//	テクスチャ情報
	ID3D11ShaderResourceView*		m_pShaderResourceView;
	ID3D11Buffer* m_pVertexBuffer;

	size_t m_width;
	size_t m_height;
	size_t m_instanceNum;
	DirectX::XMFLOAT3* m_pPosList;
};
#endif // !__DX_2DOBJECT_H_
